// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// trim
std::string trim(std::string s);
RcppExport SEXP _rmaxima_trim(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(trim(s));
    return rcpp_result_gen;
END_RCPP
}
// checkCommand
std::string checkCommand(std::string command);
RcppExport SEXP _rmaxima_checkCommand(SEXP commandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type command(commandSEXP);
    rcpp_result_gen = Rcpp::wrap(checkCommand(command));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rmaxima_trim", (DL_FUNC) &_rmaxima_trim, 1},
    {"_rmaxima_checkCommand", (DL_FUNC) &_rmaxima_checkCommand, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rmaxima(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
